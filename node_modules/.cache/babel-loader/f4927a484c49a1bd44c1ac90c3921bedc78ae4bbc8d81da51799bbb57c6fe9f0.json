{"ast":null,"code":"import { http, HttpResponse } from 'msw';\nimport { phonePlansByMobile } from './phonePlans';\nexport const handlers = [http.post(\"/getCompatiblePlans\", async ({\n  request\n}) => {\n  const payload = await request.json();\n  if (payload.searchType === 'IMEI') {\n    return HttpResponse.json({\n      plans: [{\n        id: 1,\n        name: 'Tom'\n      }, {\n        id: 2,\n        name: 'Jerry'\n      }, {\n        id: 3,\n        name: 'Spike'\n      }]\n    });\n  } else {\n    let phonePlans = phonePlansByMobile.find(plan => plan.name === payload.searchValue);\n    if (phonePlans) {\n      return HttpResponse.json({\n        plans: phonePlans.plans\n      });\n    } else {\n      return HttpResponse.json({\n        plans: []\n      });\n    }\n  }\n})];","map":{"version":3,"names":["http","HttpResponse","phonePlansByMobile","handlers","post","request","payload","json","searchType","plans","id","name","phonePlans","find","plan","searchValue"],"sources":["/Users/shaileshyadav/Desktop/Shailesh/Projects/mobile-plan-compatible/src/mocks/handlers.js"],"sourcesContent":["import { http, HttpResponse } from 'msw'\nimport { phonePlansByMobile } from './phonePlans';\n\nexport const handlers = [\n  \n  http.post(\"/getCompatiblePlans\", async ({ request }) => {\n\n    const payload = await request.json();\n\n    if(payload.searchType === 'IMEI') {\n      return HttpResponse.json({\n        plans: [\n        { id: 1, name: 'Tom' },\n        { id: 2, name: 'Jerry' },\n        { id: 3, name: 'Spike' },\n        ],\n      })\n    } else {\n\n      let phonePlans = phonePlansByMobile.find(plan => plan.name === payload.searchValue);\n      if(phonePlans) {\n        return HttpResponse.json({\n          plans: phonePlans.plans\n        })\n      } else {\n        return HttpResponse.json({\n          plans: []\n        })\n      }\n    }\n  \n  })\n];\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,YAAY,QAAQ,KAAK;AACxC,SAASC,kBAAkB,QAAQ,cAAc;AAEjD,OAAO,MAAMC,QAAQ,GAAG,CAEtBH,IAAI,CAACI,IAAI,CAAC,qBAAqB,EAAE,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAEtD,MAAMC,OAAO,GAAG,MAAMD,OAAO,CAACE,IAAI,CAAC,CAAC;EAEpC,IAAGD,OAAO,CAACE,UAAU,KAAK,MAAM,EAAE;IAChC,OAAOP,YAAY,CAACM,IAAI,CAAC;MACvBE,KAAK,EAAE,CACP;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAM,CAAC,EACtB;QAAED,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,EACxB;QAAED,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC;IAE1B,CAAC,CAAC;EACJ,CAAC,MAAM;IAEL,IAAIC,UAAU,GAAGV,kBAAkB,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,IAAI,KAAKL,OAAO,CAACS,WAAW,CAAC;IACnF,IAAGH,UAAU,EAAE;MACb,OAAOX,YAAY,CAACM,IAAI,CAAC;QACvBE,KAAK,EAAEG,UAAU,CAACH;MACpB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,OAAOR,YAAY,CAACM,IAAI,CAAC;QACvBE,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;EACF;AAEF,CAAC,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
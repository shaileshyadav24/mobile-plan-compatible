{"ast":null,"code":"var _jsxFileName = \"/Users/shaileshyadav/Desktop/Shailesh/Projects/mobile-plan-compatible/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function enableMocking() {\n  const {\n    worker\n  } = await import('./mocks/browser');\n\n  // `worker.start()` returns a Promise that resolves\n  // once the Service Worker is up and ready to intercept requests.\n  return worker.start();\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nenableMocking(() => {\n  root.render(/*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: new QueryClient(),\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this));\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","Provider","store","QueryClient","QueryClientProvider","jsxDEV","_jsxDEV","enableMocking","worker","start","root","createRoot","document","getElementById","render","client","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/shaileshyadav/Desktop/Shailesh/Projects/mobile-plan-compatible/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nasync function enableMocking() {\n\n  const { worker } = await import('./mocks/browser')\n \n  // `worker.start()` returns a Promise that resolves\n  // once the Service Worker is up and ready to intercept requests.\n  return worker.start()\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nenableMocking(() => {\n  root.render(\n    <QueryClientProvider client={new QueryClient()}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </QueryClientProvider>\n  );\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,eAAeC,aAAaA,CAAA,EAAG;EAE7B,MAAM;IAAEC;EAAO,CAAC,GAAG,MAAM,MAAM,CAAC,iBAAiB,CAAC;;EAElD;EACA;EACA,OAAOA,MAAM,CAACC,KAAK,CAAC,CAAC;AACvB;AAEA,MAAMC,IAAI,GAAGZ,QAAQ,CAACa,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEN,aAAa,CAAC,MAAM;EAClBG,IAAI,CAACI,MAAM,cACTR,OAAA,CAACF,mBAAmB;IAACW,MAAM,EAAE,IAAIZ,WAAW,CAAC,CAAE;IAAAa,QAAA,eAC7CV,OAAA,CAACL,QAAQ;MAACC,KAAK,EAAEA,KAAM;MAAAc,QAAA,eACrBV,OAAA,CAACP,GAAG;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CACvB,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACA;AACApB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
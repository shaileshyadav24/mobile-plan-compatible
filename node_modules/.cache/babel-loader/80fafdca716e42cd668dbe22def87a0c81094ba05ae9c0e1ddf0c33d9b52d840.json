{"ast":null,"code":"import { Emitter } from \"strict-event-emitter\";\nimport { createRequestId } from \"@mswjs/interceptors\";\nimport { matchRequestUrl } from '../utils/matching/matchRequestUrl.mjs';\nimport { getCallFrame } from '../utils/internal/getCallFrame.mjs';\nconst kEmitter = Symbol(\"kEmitter\");\nconst kDispatchEvent = Symbol(\"kDispatchEvent\");\nconst kSender = Symbol(\"kSender\");\nconst kStopPropagationPatched = Symbol(\"kStopPropagationPatched\");\nconst KOnStopPropagation = Symbol(\"KOnStopPropagation\");\nclass WebSocketHandler {\n  constructor(url) {\n    this.url = url;\n    this.id = createRequestId();\n    this[kEmitter] = new Emitter();\n    this.callFrame = getCallFrame(new Error());\n    this.__kind = \"EventHandler\";\n  }\n  __kind;\n  id;\n  callFrame;\n  [kEmitter];\n  parse(args) {\n    const connection = args.event.data;\n    const match = matchRequestUrl(connection.client.url, this.url);\n    return {\n      match\n    };\n  }\n  predicate(args) {\n    return args.parsedResult.match.matches;\n  }\n  async [kDispatchEvent](event) {\n    const parsedResult = this.parse({\n      event\n    });\n    const connection = event.data;\n    const resolvedConnection = {\n      ...connection,\n      params: parsedResult.match.params || {}\n    };\n    connection.client.addEventListener(\"message\", createStopPropagationListener(this));\n    connection.client.addEventListener(\"close\", createStopPropagationListener(this));\n    connection.server.addEventListener(\"open\", createStopPropagationListener(this));\n    connection.server.addEventListener(\"message\", createStopPropagationListener(this));\n    connection.server.addEventListener(\"error\", createStopPropagationListener(this));\n    connection.server.addEventListener(\"close\", createStopPropagationListener(this));\n    this[kEmitter].emit(\"connection\", resolvedConnection);\n  }\n}\nfunction createStopPropagationListener(handler) {\n  return function stopPropagationListener(event) {\n    const propagationStoppedAt = Reflect.get(event, \"kPropagationStoppedAt\");\n    if (propagationStoppedAt && handler.id !== propagationStoppedAt) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    Object.defineProperty(event, KOnStopPropagation, {\n      value() {\n        Object.defineProperty(event, \"kPropagationStoppedAt\", {\n          value: handler.id\n        });\n      },\n      configurable: true\n    });\n    if (!Reflect.get(event, kStopPropagationPatched)) {\n      event.stopPropagation = new Proxy(event.stopPropagation, {\n        apply: (target, thisArg, args) => {\n          Reflect.get(event, KOnStopPropagation)?.call(handler);\n          return Reflect.apply(target, thisArg, args);\n        }\n      });\n      Object.defineProperty(event, kStopPropagationPatched, {\n        value: true,\n        // If something else attempts to redefine this, throw.\n        configurable: false\n      });\n    }\n  };\n}\nexport { WebSocketHandler, kDispatchEvent, kEmitter, kSender };","map":{"version":3,"names":["Emitter","createRequestId","matchRequestUrl","getCallFrame","kEmitter","Symbol","kDispatchEvent","kSender","kStopPropagationPatched","KOnStopPropagation","WebSocketHandler","constructor","url","id","callFrame","Error","__kind","parse","args","connection","event","data","match","client","predicate","parsedResult","matches","resolvedConnection","params","addEventListener","createStopPropagationListener","server","emit","handler","stopPropagationListener","propagationStoppedAt","Reflect","get","stopImmediatePropagation","Object","defineProperty","value","configurable","stopPropagation","Proxy","apply","target","thisArg","call"],"sources":["/Users/shaileshyadav/Desktop/Shailesh/Projects/mobile-plan-compatible/node_modules/msw/src/core/handlers/WebSocketHandler.ts"],"sourcesContent":["import { Emitter } from 'strict-event-emitter'\nimport { createRequestId } from '@mswjs/interceptors'\nimport type { WebSocketConnectionData } from '@mswjs/interceptors/WebSocket'\nimport {\n  type Match,\n  type Path,\n  type PathParams,\n  matchRequestUrl,\n} from '../utils/matching/matchRequestUrl'\nimport { getCallFrame } from '../utils/internal/getCallFrame'\nimport type { HandlerKind } from './common'\n\ntype WebSocketHandlerParsedResult = {\n  match: Match\n}\n\nexport type WebSocketHandlerEventMap = {\n  connection: [args: WebSocketHandlerConnection]\n}\n\nexport interface WebSocketHandlerConnection extends WebSocketConnectionData {\n  params: PathParams\n}\n\nexport const kEmitter = Symbol('kEmitter')\nexport const kDispatchEvent = Symbol('kDispatchEvent')\nexport const kSender = Symbol('kSender')\nconst kStopPropagationPatched = Symbol('kStopPropagationPatched')\nconst KOnStopPropagation = Symbol('KOnStopPropagation')\n\nexport class WebSocketHandler {\n  private readonly __kind: HandlerKind\n\n  public id: string\n  public callFrame?: string\n\n  protected [kEmitter]: Emitter<WebSocketHandlerEventMap>\n\n  constructor(private readonly url: Path) {\n    this.id = createRequestId()\n\n    this[kEmitter] = new Emitter()\n    this.callFrame = getCallFrame(new Error())\n    this.__kind = 'EventHandler'\n  }\n\n  public parse(args: {\n    event: MessageEvent<WebSocketConnectionData>\n  }): WebSocketHandlerParsedResult {\n    const connection = args.event.data\n    const match = matchRequestUrl(connection.client.url, this.url)\n\n    return {\n      match,\n    }\n  }\n\n  public predicate(args: {\n    event: MessageEvent<WebSocketConnectionData>\n    parsedResult: WebSocketHandlerParsedResult\n  }): boolean {\n    return args.parsedResult.match.matches\n  }\n\n  async [kDispatchEvent](\n    event: MessageEvent<WebSocketConnectionData>,\n  ): Promise<void> {\n    const parsedResult = this.parse({ event })\n    const connection = event.data\n\n    const resolvedConnection: WebSocketHandlerConnection = {\n      ...connection,\n      params: parsedResult.match.params || {},\n    }\n\n    // Support `event.stopPropagation()` for various client/server events.\n    connection.client.addEventListener(\n      'message',\n      createStopPropagationListener(this),\n    )\n    connection.client.addEventListener(\n      'close',\n      createStopPropagationListener(this),\n    )\n\n    connection.server.addEventListener(\n      'open',\n      createStopPropagationListener(this),\n    )\n    connection.server.addEventListener(\n      'message',\n      createStopPropagationListener(this),\n    )\n    connection.server.addEventListener(\n      'error',\n      createStopPropagationListener(this),\n    )\n    connection.server.addEventListener(\n      'close',\n      createStopPropagationListener(this),\n    )\n\n    // Emit the connection event on the handler.\n    // This is what the developer adds listeners for.\n    this[kEmitter].emit('connection', resolvedConnection)\n  }\n}\n\nfunction createStopPropagationListener(handler: WebSocketHandler) {\n  return function stopPropagationListener(event: Event) {\n    const propagationStoppedAt = Reflect.get(event, 'kPropagationStoppedAt') as\n      | string\n      | undefined\n\n    if (propagationStoppedAt && handler.id !== propagationStoppedAt) {\n      event.stopImmediatePropagation()\n      return\n    }\n\n    Object.defineProperty(event, KOnStopPropagation, {\n      value(this: WebSocketHandler) {\n        Object.defineProperty(event, 'kPropagationStoppedAt', {\n          value: handler.id,\n        })\n      },\n      configurable: true,\n    })\n\n    // Since the same event instance is shared between all client/server objects,\n    // make sure to patch its `stopPropagation` method only once.\n    if (!Reflect.get(event, kStopPropagationPatched)) {\n      event.stopPropagation = new Proxy(event.stopPropagation, {\n        apply: (target, thisArg, args) => {\n          Reflect.get(event, KOnStopPropagation)?.call(handler)\n          return Reflect.apply(target, thisArg, args)\n        },\n      })\n\n      Object.defineProperty(event, kStopPropagationPatched, {\n        value: true,\n        // If something else attempts to redefine this, throw.\n        configurable: false,\n      })\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}